_BASE_: [
  '../../picodet/picodet_s_416_coco_lcnet.yml',
  '../_base_/coco_detection_percent_10.yml',
  #'../_base_/coco_detection_percent_5.yml',
]
log_iter: 20
snapshot_epoch: 4
epochs: &epochs 300
base_lr: &base_lr 0.24
weights: output/denseteacher_picodet_s_416_lcnet075_coco_semi010/model_final

### pretrain and warmup config, choose one and coment another
pretrain_weights: https://bj.bcebos.com/v1/paddledet/models/semi_det/picodet_s_416_coco_lcnet_10.pdparams
#pretrain_weights: https://bj.bcebos.com/v1/paddledet/models/semi_det/picodet_s_416_coco_lcnet_5.pdparams
semi_start_iters: 0
ema_start_iters: 0
use_warmup: &use_warmup False

# pretrain_weights: pretrain_weights: https://paddle-imagenet-models-name.bj.bcebos.com/dygraph/legendary_models/PPLCNet_x0_75_pretrained.pdparams
# semi_start_iters: 5000
# ema_start_iters: 3000
# use_warmup: &use_warmup True


### global config
use_simple_ema: True
ema_decay: 0.9996
ssod_method: DenseTeacher
DenseTeacher:
  train_cfg:
    sup_weight: 1.0
    unsup_weight: 1.0
    loss_weight: {distill_loss_vfl: 1.0, distill_loss_bbox: 1.0, distill_loss_dfl: 1.0}
    concat_sup_data: True
    suppress: linear
    ratio: 0.01 #
    gamma: 2.0
  test_cfg:
    inference_on: teacher


### reader config
batch_size: &batch_size 48
worker_num: 2
eval_height: &eval_height 416
eval_width: &eval_width 416
eval_size: &eval_size [*eval_height, *eval_width]
SemiTrainReader:
  sample_transforms:
    - Decode: {}
    - RandomCrop: {}
    - RandomFlip: {prob: 0.5}
    - RandomDistort: {}
  weak_aug:
    - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  strong_aug:
    - StrongAugImage: {transforms: [
        RandomColorJitter: {prob: 0.8, brightness: 0.4, contrast: 0.4, saturation: 0.4, hue: 0.1},
        RandomErasingCrop: {},
        RandomGaussianBlur: {prob: 0.5, sigma: [0.1, 2.0]},
        RandomGrayscale: {prob: 0.2},
      ]}
    - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  sup_batch_transforms:
    - BatchRandomResize: {target_size: [352, 384, 416, 448, 480], random_size: True, random_interp: True, keep_ratio: False}
    - Permute: {}
    - PadGT: {}
  unsup_batch_transforms:
    - BatchRandomResize: {target_size: [352, 384, 416, 448, 480], random_size: True, random_interp: True, keep_ratio: False}
    - Permute: {}
  sup_batch_size: *batch_size
  unsup_batch_size: *batch_size
  shuffle: True
  drop_last: True

EvalReader:
  sample_transforms:
  - Decode: {}
  - Resize: {interp: 2, target_size: *eval_size, keep_ratio: False}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - Permute: {}
  batch_transforms:
  - PadBatch: {pad_to_stride: 32}
  batch_size: 8
  shuffle: false

TestReader:
  inputs_def:
    image_shape: [1, 3, *eval_height, *eval_width]
  sample_transforms:
  - Decode: {}
  - Resize: {interp: 2, target_size: *eval_size, keep_ratio: False}
  - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
  - Permute: {}
  batch_size: 1


### model config
find_unused_parameters: True
architecture: PicoDet
PicoDet:
  backbone: LCNet
  neck: LCPAN
  head: PicoHeadV2

LCNet:
  scale: 0.75
  feature_maps: [3, 4, 5]

LCPAN:
  out_channels: 96
  use_depthwise: True
  num_features: 4

PicoHeadV2:
  conv_feat:
    name: PicoFeat
    feat_in: 96
    feat_out: 96
    num_convs: 2
    num_fpn_stride: 4
    norm_type: bn
    share_cls_reg: True
    use_se: True
  feat_in_chan: 96
  fpn_stride: [8, 16, 32, 64]
  prior_prob: 0.01
  reg_max: 7
  cell_offset: 0.5
  grid_cell_scale: 5.0
  static_assigner_epoch: 100
  use_align_head: True
  static_assigner:
    name: ATSSAssigner
    topk: 9
    force_gt_matching: False
  assigner:
    name: TaskAlignedAssigner
    topk: 13
    alpha: 1.0
    beta: 6.0
  loss_class:
    name: VarifocalLoss
    use_sigmoid: False
    iou_weighted: True
    loss_weight: 1.0
  loss_dfl:
    name: DistributionFocalLoss
    loss_weight: 0.5
  loss_bbox:
    name: GIoULoss
    loss_weight: 2.5
  nms:
    name: MultiClassNMS
    nms_top_k: 1000
    keep_top_k: 100
    score_threshold: 0.025
    nms_threshold: 0.6


### other config
epoch: *epochs
LearningRate:
  base_lr: *base_lr
  schedulers:
  - !CosineDecay
    max_epochs: *epochs
    use_warmup: *use_warmup
  - !LinearWarmup
    start_factor: 0.1
    steps: 300

OptimizerBuilder:
  optimizer:
    momentum: 0.9
    type: Momentum
  regularizer:
    factor: 0.00004
    type: L2
